package txt

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestContainsNumber(t *testing.T) {
	t.Run("True", func(t *testing.T) {
		assert.Equal(t, true, ContainsNumber("f3abcde"))
	})
	t.Run("False", func(t *testing.T) {
		assert.Equal(t, false, ContainsNumber("abcd"))
	})
}

func TestContainsSymbols(t *testing.T) {
	t.Run("123", func(t *testing.T) {
		assert.False(t, ContainsSymbols("123"))
	})
	t.Run("The quick brown fox.", func(t *testing.T) {
		assert.False(t, ContainsSymbols("The quick brown fox."))
	})
	t.Run("bridge", func(t *testing.T) {
		assert.False(t, ContainsSymbols("bridge"))
	})
	t.Run("Ê°•", func(t *testing.T) {
		assert.False(t, ContainsSymbols("Ê°•"))
	})
	t.Run("Ê°•Ëàπ", func(t *testing.T) {
		assert.False(t, ContainsSymbols("Ê°•Ëàπ"))
	})
	t.Run("‡§∏‡•ç‡§•‡§æ‡§®", func(t *testing.T) {
		assert.False(t, ContainsSymbols("‡§∏‡•ç‡§•‡§æ‡§®"))
	})
	t.Run("r√©seau", func(t *testing.T) {
		assert.False(t, ContainsSymbols("r√©seau"))
	})
	t.Run("empty", func(t *testing.T) {
		assert.False(t, ContainsSymbols(""))
	})
	t.Run("...", func(t *testing.T) {
		assert.True(t, ContainsSymbols("üòâ"))
	})
}

func TestContainsLetters(t *testing.T) {
	t.Run("123", func(t *testing.T) {
		assert.False(t, ContainsLetters("123"))
	})
	t.Run("The quick brown fox.", func(t *testing.T) {
		assert.False(t, ContainsLetters("The quick brown fox."))
	})
	t.Run("bridge", func(t *testing.T) {
		assert.True(t, ContainsLetters("bridge"))
	})
	t.Run("Ê°•", func(t *testing.T) {
		assert.True(t, ContainsLetters("Ê°•"))
	})
	t.Run("Ê°•Ëàπ", func(t *testing.T) {
		assert.True(t, ContainsLetters("Ê°•Ëàπ"))
	})
	t.Run("‡§∏‡•ç‡§•‡§æ‡§®", func(t *testing.T) {
		assert.False(t, ContainsLetters("‡§∏‡•ç‡§•‡§æ‡§®"))
	})
	t.Run("r√©seau", func(t *testing.T) {
		assert.True(t, ContainsLetters("r√©seau"))
	})
	t.Run("Empty", func(t *testing.T) {
		assert.Equal(t, false, ContainsLetters(""))
	})
}

func TestContainsASCIILetters(t *testing.T) {
	t.Run("123", func(t *testing.T) {
		assert.False(t, ContainsASCIILetters("123"))
	})
	t.Run("The quick brown fox.", func(t *testing.T) {
		assert.False(t, ContainsASCIILetters("The quick brown fox."))
	})
	t.Run("bridge", func(t *testing.T) {
		assert.True(t, ContainsASCIILetters("bridge"))
	})
	t.Run("Ê°•", func(t *testing.T) {
		assert.False(t, ContainsASCIILetters("Ê°•"))
	})
	t.Run("Ê°•Ëàπ", func(t *testing.T) {
		assert.False(t, ContainsASCIILetters("Ê°•Ëàπ"))
	})
	t.Run("‡§∏‡•ç‡§•‡§æ‡§®", func(t *testing.T) {
		assert.False(t, ContainsASCIILetters("‡§∏‡•ç‡§•‡§æ‡§®"))
	})
	t.Run("r√©seau", func(t *testing.T) {
		assert.False(t, ContainsASCIILetters("r√©seau"))
	})
}
